"""empty message

Revision ID: b49b50f63406
Revises: 
Create Date: 2024-11-27 11:12:08.999137

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b49b50f63406'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subjects')
    op.drop_table('students')
    op.drop_table('lessons')
    op.drop_table('parents')
    op.drop_table('teachers')
    op.drop_table('reports')
    op.drop_table('users')
    op.drop_table('grades')
    op.drop_table('user_role')
    op.drop_table('attendances')
    op.drop_table('classes')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('classes',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='classes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('attendances',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('lesson_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('student_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.id'], name='fk4s1oy9mebh4q8nog69l2oko8t'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name='fk7bm4q4wptspkenhrsjgatdmk0'),
    sa.PrimaryKeyConstraint('id', name='attendances_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_role',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('roles', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.CheckConstraint("roles::text = ANY (ARRAY['ADMIN'::character varying, 'TEACHER'::character varying, 'STUDENT'::character varying, 'PARENT'::character varying]::text[])", name='user_role_roles_check'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fkj345gk1bovqvfame88rcx7yyx')
    )
    op.create_table('grades',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('grade', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('student_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('subject_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('teacher_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name='fk13a16545m7vvrcspc999r15s9'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name='fkrc0s5tgvm9r4ccxitaqtu88k5'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], name='fkjkankww1vg2lw4ysxo90qp51h'),
    sa.PrimaryKeyConstraint('id', name='grades_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('login', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('reports',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('creation_date', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('attendance_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('parent_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('student_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('teacher_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['attendance_id'], ['attendances.id'], name='fkrpiq1togeoempctpxpdeapjhl'),
    sa.ForeignKeyConstraint(['parent_id'], ['parents.id'], name='fk906h75sjwni5wbixtmos5mf5d'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name='fkltpvf7j6lodaeqrm3skr8jjdf'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], name='fknge0wchwape7sumo41bbe7lxi'),
    sa.PrimaryKeyConstraint('id', name='reports_pkey')
    )
    op.create_table('teachers',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('corp_email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('subject_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name='fksahkj7ew9hfs6byrpl75br5lx'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fkb8dct7w2j1vl1r2bpstw5isc0'),
    sa.PrimaryKeyConstraint('id', name='teachers_pkey'),
    sa.UniqueConstraint('user_id', name='ukcd1k6xwg9jqtiwx9ybnxpmoh9'),
    postgresql_ignore_search_path=False
    )
    op.create_table('parents',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(length=15), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fkchh8tf8w072tapgqoijrahojk'),
    sa.PrimaryKeyConstraint('id', name='parents_pkey'),
    sa.UniqueConstraint('user_id', name='ukc1t2v6wf187l8w0yew9sph3l4'),
    postgresql_ignore_search_path=False
    )
    op.create_table('lessons',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=True),
    sa.Column('class_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('subject_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('teacher_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], name='fkg0m63rprnplb9sf2bu2cbriq6'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name='fke94a0k21xpi7glv89af90lwjv'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], name='fkbr76cuebuufbbltujpfq04tto'),
    sa.PrimaryKeyConstraint('id', name='lessons_pkey')
    )
    op.create_table('students',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('parent_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('class_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], name='fkhnslh0rm5bthlble8vjunbnwe'),
    sa.ForeignKeyConstraint(['parent_id'], ['parents.id'], name='fk7bbpphkk8f0aoav3iiih3mh4e'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fkdt1cjx5ve5bdabmuuf3ibrwaq'),
    sa.PrimaryKeyConstraint('id', name='students_pkey'),
    sa.UniqueConstraint('user_id', name='ukg4fwvutq09fjdlb4bb0byp7t')
    )
    op.create_table('subjects',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='subjects_pkey')
    )
    # ### end Alembic commands ###
